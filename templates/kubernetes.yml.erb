---
name: <%= properties.name || "bat" %>
director_uuid: <%= properties.uuid %>

releases:
  - name: bat
    version: <%= properties.release || "latest" %>

compilation:
  workers: 2
  network: default
  reuse_compilation_vms: true
  cloud_properties:
    resources:
      limits:
        cpu: 4
        memory: 16Gi

update:
  canaries: <%= properties.canaries || 1 %>
  canary_watch_time: 3000-90000
  update_watch_time: 3000-90000
  max_in_flight: <%= properties.max_in_flight || 1 %>

networks:
#- name: static
#  type: vip
#  cloud_properties: {}

<% properties.networks.each do |network| %>
- name: <%= network.name %>
  type: <%= network.type %>
  dns: <%= p('dns').inspect %>
  cloud_properties: {}
<% end %>

resource_pools:
  - name: common
    network: default
    size: <%= properties.pool_size %>
    stemcell:
      name: <%= properties.stemcell.name %>
      version: '<%= properties.stemcell.version %>'
    cloud_properties:
      resources:
        limits:
          cpu: 0.5
          memory: 2Gi
    <% if properties.password %>
    env:
      bosh:
        password: <%= properties.password %>
        authorized_keys: [<%= properties.vcap_public_key %>]
    <% end %>

jobs:
  - name: <%= properties.job || "batlight" %>
    templates: <% (properties.templates || ["batlight"]).each do |template| %>
    - name: <%= template %>
    <% end %>
    instances: <%= properties.instances %>
    resource_pool: common
    <% if properties.persistent_disk %>
    persistent_disk: <%= properties.persistent_disk %>
    <% end %>
    networks:
    <% properties.job_networks.each_with_index do |network, i| %>
      - name: <%= network.name %>
      <% if i == 0 %>
        default: [dns, gateway]
      <% end %>
    <% end %>


properties:
  kubernetes:
    connection_options:
      idempotent: true
  batlight:
    <% if properties.batlight.fail %>
    fail: <%= properties.batlight.fail %>
    <% end %>
    <% if properties.batlight.missing %>
    missing: <%= properties.batlight.missing %>
    <% end %>
    <% if properties.batlight.drain_type %>
    drain_type: <%= properties.batlight.drain_type %>
    <% end %>
